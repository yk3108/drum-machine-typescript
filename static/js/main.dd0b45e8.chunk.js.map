{"version":3,"sources":["components/DrumPad.tsx","components/drumPadsArray.ts","components/App.tsx","index.tsx"],"names":["DrumPad","props","useEffect","handleKyeDown","e","keyString","key","toLowerCase","char","onClick","window","addEventListener","removeEventListener","src","Button","id","className","drumPadsArray","App","useState","displayValue","setdisplayValue","handleClick","audio","document","getElementById","currentTime","play","drumPads","map","item","Container","fluid","Row","Col","ReactDOM","render"],"mappings":"2NA2CeA,EAhCkB,SAACC,GAChCC,qBAAU,WACR,IAAMC,EAAgB,SAACC,GAAsB,IACnCC,EAAcJ,EAAdI,UAER,GAAID,EAAEE,IAAIC,gBAAkBF,EAAW,CAAC,IAC9BG,EAAkBP,EAAlBO,MACRC,EAD0BR,EAAZQ,SACND,KAKZ,OADAE,OAAOC,iBAAiB,UAAWR,GAC5B,WACLO,OAAOE,oBAAoB,UAAWT,MAEvC,CAACF,IAf6C,IAiBzCO,EAAuBP,EAAvBO,KAAMK,EAAiBZ,EAAjBY,IAAKJ,EAAYR,EAAZQ,QAEnB,OACE,kBAACK,EAAA,EAAD,CACEC,GAAE,UAAKP,EAAL,WACFQ,UAAU,WACVP,QAAS,kBAAMA,EAAQD,KAEtBA,EAED,2BAAOK,IAAKA,EAAKG,UAAU,OAAOD,GAAIP,MCU7BS,EAhDO,CACpB,CACET,KAAM,IACNK,IAAK,aACLR,UAAW,KAEb,CACEG,KAAM,IACNK,IAAK,aACLR,UAAW,KAEb,CACEG,KAAM,IACNK,IAAK,aACLR,UAAW,KAEb,CACEG,KAAM,IACNK,IAAK,aACLR,UAAW,KAEb,CACEG,KAAM,IACNK,IAAK,aACLR,UAAW,KAEb,CACEG,KAAM,IACNK,IAAK,aACLR,UAAW,KAEb,CACEG,KAAM,IACNK,IAAK,aACLR,UAAW,KAEb,CACEG,KAAM,IACNK,IAAK,aACLR,UAAW,KAEb,CACEG,KAAM,IACNK,IAAK,aACLR,UAAW,MCOAa,G,MA5CO,WAAO,IAAD,EACcC,mBACtC,sCAFwB,mBACnBC,EADmB,KACLC,EADK,KAKpBC,EAAc,SAACd,GACnB,IAAMe,EAAQC,SAASC,eAAejB,GAEtCe,EAAMG,YAAc,EACpBH,EAAMI,OACNN,EAAgBb,IAGZoB,EAAWX,EAAcY,KAAI,SAACC,GAClC,OACE,kBAAC,EAAD,CACExB,IAAG,UAAKwB,EAAKtB,KAAV,WACHA,KAAMsB,EAAKtB,KACXH,UAAWyB,EAAKzB,UAChBQ,IAAKiB,EAAKjB,IACVJ,QAASa,OAKf,OACE,kBAACS,EAAA,EAAD,CAAWC,OAAK,EAACjB,GAAG,eAAeC,UAAU,eAC3C,kBAACiB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,8CAGJ,kBAACD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,yBAAKnB,GAAG,WAAWK,KAGvB,kBAACa,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KAAMN,OCxCdO,IAASC,OAAO,kBAAC,EAAD,MAASZ,SAASC,eAAe,U","file":"static/js/main.dd0b45e8.chunk.js","sourcesContent":["// eslint-disable-next-line no-use-before-define\nimport React, { useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\n\ntype Props = {\n  char: string;\n  src: string;\n  keyString: string;\n  onClick: (char: string) => void;\n};\n\nconst DrumPad: React.FC<Props> = (props: Props) => {\n  useEffect(() => {\n    const handleKyeDown = (e: KeyboardEvent) => {\n      const { keyString } = props;\n\n      if (e.key.toLowerCase() === keyString) {\n        const { char, onClick } = props;\n        onClick(char);\n      }\n    };\n\n    window.addEventListener('keydown', handleKyeDown);\n    return () => {\n      window.removeEventListener('keydown', handleKyeDown);\n    };\n  }, [props]);\n\n  const { char, src, onClick } = props;\n\n  return (\n    <Button\n      id={`${char}-button`}\n      className=\"drum-pad\"\n      onClick={() => onClick(char)}\n    >\n      {char}\n      {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n      <audio src={src} className=\"clip\" id={char} />\n    </Button>\n  );\n};\n\nexport default DrumPad;\n","const drumPadsArray = [\n  {\n    char: 'Q',\n    src: './se/Q.mp3',\n    keyString: 'q',\n  },\n  {\n    char: 'W',\n    src: './se/W.mp3',\n    keyString: 'w',\n  },\n  {\n    char: 'E',\n    src: './se/E.mp3',\n    keyString: 'e',\n  },\n  {\n    char: 'A',\n    src: './se/A.mp3',\n    keyString: 'a',\n  },\n  {\n    char: 'S',\n    src: './se/S.mp3',\n    keyString: 's',\n  },\n  {\n    char: 'D',\n    src: './se/D.mp3',\n    keyString: 'd',\n  },\n  {\n    char: 'Z',\n    src: './se/Z.mp3',\n    keyString: 'z',\n  },\n  {\n    char: 'X',\n    src: './se/X.mp3',\n    keyString: 'x',\n  },\n  {\n    char: 'C',\n    src: './se/C.mp3',\n    keyString: 'c',\n  },\n];\n\nexport default drumPadsArray;\n","// eslint-disable-next-line no-use-before-define\nimport React, { useState } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport DrumPad from './DrumPad';\nimport drumPadsArray from './drumPadsArray';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst App: React.FC = () => {\n  const [displayValue, setdisplayValue] = useState(\n    'Click the button or press the key.'\n  );\n\n  const handleClick = (char: string) => {\n    const audio = document.getElementById(char) as HTMLAudioElement;\n\n    audio.currentTime = 0;\n    audio.play();\n    setdisplayValue(char);\n  };\n\n  const drumPads = drumPadsArray.map((item) => {\n    return (\n      <DrumPad\n        key={`${item.char}-button`}\n        char={item.char}\n        keyString={item.keyString}\n        src={item.src}\n        onClick={handleClick}\n      />\n    );\n  });\n\n  return (\n    <Container fluid id=\"drum-machine\" className=\"text-center\">\n      <Row>\n        <Col>\n          <h1>Drum Machine</h1>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div id=\"display\">{displayValue}</div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>{drumPads}</Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default App;\n","// eslint-disable-next-line no-use-before-define\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}